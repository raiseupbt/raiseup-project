import type { ActionFunction } from '@remix-run/node';
import { json } from '@remix-run/node';
import { supabase } from '~/lib/supabase.server';

export const action: ActionFunction = async ({ request }) => {
  if (request.method !== 'POST') {
    return json({ error: 'M√©todo n√£o permitido' }, { status: 405 });
  }

  try {
    const dados = await request.json();
    
    // Extrair dados do formul√°rio
    const { dados_pessoais, etapa1, etapa2, etapa3, etapa4 } = dados;
    
    // Criar objeto com todas as respostas
    const respostas = {
      etapa1,
      etapa2,
      etapa3,
      etapa4
    };

    // Gerar resposta personalizada com OpenAI
    const respostaIA = await gerarRecomendacaoIA(respostas);

    // Salvar no Supabase
    const { data, error } = await supabase
      .from('formularios_sdr')
      .insert({
        nome: dados_pessoais.nome,
        email: dados_pessoais.email,
        empresa: dados_pessoais.empresa || null,
        segmento: etapa1.segmento,
        porte_empresa: etapa1.porte_empresa,
        respostas: respostas,
        resposta_ia: respostaIA,
        endereco_ip: request.headers.get('x-forwarded-for') || 
                     request.headers.get('x-real-ip') || 
                     'unknown',
        navegador: request.headers.get('user-agent') || 'unknown'
      })
      .select()
      .single();

    if (error) {
      console.error('Erro ao salvar no Supabase:', error);
      return json({ error: 'Erro ao salvar dados' }, { status: 500 });
    }

    return json({ 
      success: true, 
      id: data.id,
      message: 'Formul√°rio processado com sucesso'
    });

  } catch (error) {
    console.error('Erro ao processar formul√°rio:', error);
    return json({ error: 'Erro interno do servidor' }, { status: 500 });
  }
};

async function gerarRecomendacaoIA(respostas: any): Promise<string> {
  const prompt = construirPrompt(respostas);
  
  try {
    // Verificar se temos a chave da OpenAI configurada
    const openaiKey = process.env.OPENAI_API_KEY;
    
    if (!openaiKey) {
      console.warn('OPENAI_API_KEY n√£o configurada, usando resposta simulada');
      return gerarRespostaSimulada(respostas);
    }

    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${openaiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        messages: [
          {
            role: 'system',
            content: `Voc√™ √© um especialista em vendas e automa√ß√£o comercial. Sua tarefa √© analisar as respostas de um question√°rio sobre SDR (Sales Development Representative) e fornecer recomenda√ß√µes personalizadas e pr√°ticas.

IMPORTANTE:
- Seja espec√≠fico e pr√°tico nas recomenda√ß√µes
- Use exemplos concretos de scripts e abordagens
- Organize a resposta em se√ß√µes claras
- Foque em m√©todos comprovados para WhatsApp Business
- Inclua justificativas t√©cnicas para cada recomenda√ß√£o`
          },
          {
            role: 'user',
            content: prompt
          }
        ],
        max_tokens: 2000,
        temperature: 0.7,
      }),
    });

    if (!response.ok) {
      throw new Error(`OpenAI API error: ${response.status}`);
    }

    const data = await response.json();
    return data.choices[0]?.message?.content || gerarRespostaSimulada(respostas);

  } catch (error) {
    console.error('Erro ao chamar OpenAI:', error);
    return gerarRespostaSimulada(respostas);
  }
}

function construirPrompt(respostas: any): string {
  const { etapa1, etapa2, etapa3, etapa4 } = respostas;
  
  return `Analise este perfil de empresa e forne√ßa recomenda√ß√µes personalizadas para um agente SDR via WhatsApp:

**PERFIL DA EMPRESA:**
- Segmento: ${etapa1.segmento}
- Porte: ${etapa1.porte_empresa}
- Valor m√©dio: ${etapa1.valor_medio}

**PERFIL DOS CLIENTES:**
- Comportamento: ${etapa2.perfil_cliente}
- Motiva√ß√£o: ${etapa2.motivacao_cliente}
- Processo de decis√£o: ${etapa2.processo_decisao}

**CONTEXTO DE VENDAS:**
- Maior desafio: ${etapa3.maior_desafio}
- Origem dos clientes: ${etapa3.origem_clientes}
- Urg√™ncia: ${etapa3.urgencia_necessidade}

**OBJETIVOS:**
- Objetivo do SDR: ${etapa4.objetivo_sdr}
- Tom desejado: ${etapa4.tom_comunicacao}

Forne√ßa uma an√°lise completa com:

1. **M√âTODO PRINCIPAL RECOMENDADO** (e justificativa)
2. **M√âTODOS COMPLEMENTARES** (2 op√ß√µes adicionais)
3. **ESTRUTURA DE ABORDAGEM** (fluxo de conversa detalhado)
4. **SCRIPTS SUGERIDOS** (exemplos pr√°ticos para WhatsApp)
5. **TRATAMENTO DE OBJE√á√ïES** (principais obje√ß√µes e como lidar)
6. **M√âTRICAS DE ACOMPANHAMENTO** (KPIs importantes)

Seja espec√≠fico, pr√°tico e use exemplos reais de mensagens.`;
}

function gerarRespostaSimulada(respostas: any): string {
  const { etapa1, etapa2, etapa3, etapa4 } = respostas;
  
  // L√≥gica b√°sica para gerar recomenda√ß√µes baseadas nas respostas
  let metodoRecomendado = '';
  let justificativa = '';
  
  // Determinar m√©todo principal baseado no perfil
  if (etapa2.perfil_cliente === 'sabem-o-que-querem' && etapa4.objetivo_sdr === 'agendar-consultas') {
    metodoRecomendado = 'M√©todo Direto de Agendamento';
    justificativa = 'Seus clientes j√° sabem o que querem, ent√£o o foco deve ser agilizar o agendamento.';
  } else if (etapa2.perfil_cliente === 'precisam-educacao' && etapa3.maior_desafio === 'educar-produto') {
    metodoRecomendado = 'M√©todo Educativo Progressivo';
    justificativa = 'Clientes precisam ser educados, ent√£o o SDR deve nutrir com conte√∫do educativo.';
  } else if (etapa3.maior_desafio === 'qualificar-leads') {
    metodoRecomendado = 'M√©todo de Qualifica√ß√£o BANT';
    justificativa = 'Foco na qualifica√ß√£o √© essencial para otimizar o tempo de vendas.';
  } else {
    metodoRecomendado = 'M√©todo Consultivo Adaptativo';
    justificativa = 'Abordagem flex√≠vel que se adapta ao perfil espec√≠fico do cliente.';
  }

  return `# üéØ RECOMENDA√á√ïES PERSONALIZADAS PARA SEU AGENTE SDR

## 1. M√âTODO PRINCIPAL RECOMENDADO

**${metodoRecomendado}**

${justificativa}

**Por que esta abordagem funciona para seu perfil:**
- Segmento ${etapa1.segmento} normalmente responde bem a ${etapa4.tom_comunicacao.replace('-', ' ')}
- Clientes que ${etapa2.perfil_cliente.replace('-', ' ')} precisam de abordagem espec√≠fica
- Considerando que o maior desafio √© ${etapa3.maior_desafio.replace('-', ' ')}

## 2. M√âTODOS COMPLEMENTARES

### M√©todo A: Approach por Valor
- Foque no ROI e benef√≠cios tang√≠veis
- Use cases de sucesso do seu segmento
- Destaque a urg√™ncia quando apropriado

### M√©todo B: Social Proof
- Testimoniais de clientes similares
- Casos de estudo espec√≠ficos do segmento
- Estat√≠sticas e resultados comprovados

## 3. ESTRUTURA DE ABORDAGEM SUGERIDA

### Primeira Mensagem (Abertura):
"Ol√°! Sou [Nome] da [Empresa]. Ajudo empresas do setor ${etapa1.segmento.replace('-', '/')} a [benef√≠cio espec√≠fico]. Posso te mostrar como [resultado espec√≠fico] em apenas 15 minutos?"

### Segunda Mensagem (Qualifica√ß√£o):
"Para personalizar melhor nossa conversa, voc√™ atual‚Äãmente [desafio identificado no formul√°rio]?"

### Terceira Mensagem (Agendamento):
"Baseado no que voc√™ me contou, tenho algumas estrat√©gias que podem te ajudar. Que tal conversarmos [dia/hor√°rio] para eu te mostrar?"

## 4. SCRIPTS ESPEC√çFICOS PARA WHATSAPP

### Para Clientes que ${etapa2.perfil_cliente.replace('-', ' ')}:
"Entendo que voc√™ ${etapa2.motivacao_cliente.replace('-', ' ')}. Temos uma solu√ß√£o espec√≠fica para isso. Posso te mostrar como funciona?"

### Para Tratar Obje√ß√µes de ${etapa3.maior_desafio.replace('-', ' ')}:
"Entendo sua preocupa√ß√£o. Na verdade, isso √© exatamente o que nossos clientes mais relatam. Deixe-me te mostrar como [empresa similar] resolveu isso..."

## 5. TRATAMENTO DE OBJE√á√ïES PRINCIPAIS

### "N√£o tenho tempo agora"
"Entendo perfeitamente. Por isso mesmo nossa conversa √© r√°pida - apenas 15 minutos. Quando seria melhor para voc√™: manh√£ ou tarde?"

### "J√° temos uma solu√ß√£o"
"Que bom! Como est√° funcionando? Sempre gosto de entender o que funciona no mercado. Posso compartilhar algumas otimiza√ß√µes que t√™m dado resultado?"

### "Preciso pensar"
"Claro! Para te ajudar a pensar melhor, posso te enviar um material espec√≠fico sobre ${etapa1.segmento}. Vai te dar uma vis√£o mais clara."

## 6. M√âTRICAS DE ACOMPANHAMENTO

### KPIs Principais:
- Taxa de resposta da primeira mensagem
- Taxa de agendamento
- Taxa de comparecimento 
- Tempo m√©dio de resposta

### Metas Sugeridas:
- Taxa de resposta: 25-35%
- Taxa de agendamento: 15-25%
- Taxa de comparecimento: 70-80%

## 7. PR√ìXIMOS PASSOS

1. **Teste os scripts** por 1 semana
2. **Analise as m√©tricas** e ajuste conforme necess√°rio
3. **Documente as obje√ß√µes** mais comuns
4. **Otimize baseado nos resultados**

---

**üí° DICA EXTRA:** Considerando que seus clientes v√™m principalmente de ${etapa3.origem_clientes.replace('-', ' ')}, certifique-se de mencionar isso na abordagem para criar conex√£o imediata.

**üöÄ Quer implementar essas estrat√©gias com automa√ß√£o completa? Agende uma consulta gratuita com nossa equipe!**`;
}

// N√£o exportar como default para evitar ser tratado como p√°gina
export default null;