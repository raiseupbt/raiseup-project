#!/bin/bash

# Script de deploy para VPS
echo "üöÄ Iniciando deploy do RaiseUp..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fun√ß√£o para log
log() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# Verificar se est√° no diret√≥rio correto
if [ ! -f "package.json" ]; then
    error "package.json n√£o encontrado. Execute o script no diret√≥rio raiz do projeto."
fi

# Atualizar c√≥digo do reposit√≥rio
log "Atualizando c√≥digo do reposit√≥rio..."
git pull origin main || error "Falha ao fazer pull do reposit√≥rio"

# Instalar depend√™ncias
log "Instalando depend√™ncias..."
npm install || error "Falha ao instalar depend√™ncias"

# Fazer build da aplica√ß√£o
log "Fazendo build da aplica√ß√£o..."
npm run build || error "Falha no build da aplica√ß√£o"

# Verificar se PM2 est√° instalado
if ! command -v pm2 &> /dev/null; then
    warn "PM2 n√£o est√° instalado. Instalando globalmente..."
    npm install -g pm2 || error "Falha ao instalar PM2"
fi

# Recarregar aplica√ß√£o com PM2
log "Recarregando aplica√ß√£o com PM2..."
if pm2 list | grep -q "raiseup-website"; then
    pm2 reload ecosystem.config.js || error "Falha ao recarregar aplica√ß√£o"
    log "Aplica√ß√£o recarregada com sucesso!"
else
    pm2 start ecosystem.config.js || error "Falha ao iniciar aplica√ß√£o"
    log "Aplica√ß√£o iniciada com sucesso!"
fi

# Salvar configura√ß√£o do PM2
pm2 save

# Mostrar status
log "Status da aplica√ß√£o:"
pm2 show raiseup-website

log "‚úÖ Deploy conclu√≠do com sucesso!"
log "üåê Aplica√ß√£o rodando na porta 3000"
log "üìä Use 'pm2 monit' para monitorar a aplica√ß√£o"